import os, os.path, mysql.connector, datetime, sys, commands, re
from optparse import OptionParser

connection = mysql.connector.connect(user='root', database='hdds')
cursor = connection.cursor()

def main(argv):
    parser = OptionParser()
    parser.add_option("-f", "--file", dest="filename", help="read mountpoints from FILE", metavar="FILE")

    (options, args) = parser.parse_args()
    filename = options.filename
    if filename == None:
        filename = "drives.in"


def parse_drives(f):
    lines = open(f).read().splitlines()
    for drive in lines:
        # in case drive has been automatically mounted
        command = "sudo umount /mnt"
        os.system(command)
        # mount drive
        command = "sudo mount " + drive + "/mnt"
        os.system(command)
        
        # get drive information
        command = "blkid " + drive
        output = commands.getoutput(command)
        label = re.search("LABEL=\"(\S+)\"\Z", output)

        serial = commands.getoutput("smartctl -i " + drive + " | grep \"Serial Number:\"").split()[2]

        print label, serial


def add_drive(label, location, serial, notes):
    query = "insert into drives (label, location, serial, notes) values (%s, %s, %s, %s)"
    cursor.execute(query, (label, location, serial, notes))

def remove_hdd(serial):
    cursor.execute("delete from drives where serial = \'%s\'" % serial)

def update_hdd(label, location, serial, notes):
    query = "update drives set label = %s, location = %s, notes = %s where serial = \'%s\'"
    cursor.execute(query, (label, location, notes, serial))

def add_folder(serial, folder_name):
    query = "insert into folders (serial, folder_name) values (%s, %s)"
    cursor.execute(query, (serial, folder_name))

def update_folder(folder_sequence, serial, folder_name):
    query = "update folders set serial = %s, folder_name = %s where folder_sequence = \'%s\'"
    cursor.execute(query, (serial, folder_name, folder_sequence))

def remove_folder(folder_sequence):
    cursor.execute("delete from folders where folder_sequence = \'%s\'" % folder_sequence)

def add_file(name, folder_sequence, created, notes):
    query = "insert into files (name, folder_sequence, created, notes) values (%s, %s, %s, %s)"
    cursor.execute(query, (name, folder_sequence, created, notes))

def update_file(file_sequence, name, folder_sequence, created, notes):
    query = "update files set name = %s, folder_sequence = %s, created = %s, notes = %s where file_sequence = %s"
    cursor.execute(query, (name, folder_sequence, created, notes, file_sequence))

def remove_file(file_sequence):
    cursor.execute("delete from files where file_sequence = \'%s\'" % file_sequence)




if __name__ == "__main__":
    main(sys.argv[1:])
